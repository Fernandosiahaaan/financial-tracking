# version: '3.8'

services:
  ############################################
  ##              ELK Stack                ##
  ############################################

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - default

  logstash:
    image: docker.elastic.co/logstash/logstash:8.5.0
    volumes:
      - ./elk/logstash/pipeline:/usr/share/logstash/pipeline
    ports:
      - "5044:5044"
    networks:
      - default

  kibana:
    image: docker.elastic.co/kibana/kibana:8.5.0
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - default

  ############################################
  ##          PostgreSQL (App)             ##
  ############################################

  postgres:
    image: postgres
    container_name: postgres
    platform: linux/amd64
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: financial-tracking
    volumes:
      - app_pg_data:/var/lib/postgresql/data
    networks:
      - default

  ############################################
  ##                 Redis                  ##
  ############################################

  redis:
    image: redis
    container_name: redis
    platform: linux/amd64
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - default

  ############################################
  ##                MongoDB                 ##
  ############################################

  mongodb:
    image: mongo:4.4
    container_name: mongodb
    platform: linux/amd64
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: task_management_logs
    volumes:
      - mongo_data:/data/db
    networks:
      - default

  # ############################################
  # ##           Monitoring Tools            ##
  # ############################################

  # prometheus:
  #   image: prom/prometheus
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
  #   networks:
  #     - default

  # grafana:
  #   image: grafana/grafana
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   depends_on:
  #     - prometheus
  #   networks:
  #     - default

  # ############################################
  # ##         Kafka & Zookeeper             ##
  # ############################################

  # zookeeper:
  #   image: confluentinc/cp-zookeeper:7.5.0
  #   ports:
  #     - "2181:2181"
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #   networks:
  #     - default

  # kafka:
  #   image: confluentinc/cp-kafka:7.5.0
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #   depends_on:
  #     - zookeeper
  #   networks:
  #     - default

  # ############################################
  # ##         Kong Gateway & Konga          ##
  # ############################################
  # kong-migrations:
  #   image: kong:3.6
  #   restart: "no"
  #   depends_on:
  #     - kong-database
  #   environment:
  #     KONG_DATABASE: "postgres"
  #     KONG_PG_HOST: kong-database
  #     KONG_PG_USER: kong
  #     KONG_PG_PASSWORD: kongpass
  #     KONG_PG_DATABASE: kong
  #   command: kong migrations bootstrap
  #   networks:
  #     - kong-net

  # kong-database:
  #   image: postgres:13
  #   networks:
  #     - kong-net
  #   ports:
  #     - "5433:5432"
  #   environment:
  #     POSTGRES_USER: kong
  #     POSTGRES_DB: kong
  #     POSTGRES_PASSWORD: kongpass
  #   volumes:
  #     - ~/postgres-data:/var/lib/postgresql/data

  # kong:
  #   image: kong:3.6
  #   container_name: kong
  #   restart: unless-stopped
  #   networks:
  #     - kong-net
  #   ports:
  #     - "8012:8000"
  #     - "8013:8001"
  #     - "8443:8443"
  #     - "8444:8444"
  #   environment:
  #     KONG_DATABASE: "postgres"
  #     KONG_PG_HOST: kong-database
  #     KONG_PG_USER: kong
  #     KONG_PG_PASSWORD: kongpass
  #     KONG_PG_DATABASE: kong
  #     KONG_PROXY_ACCESS_LOG: /dev/stdout
  #     KONG_ADMIN_ACCESS_LOG: /dev/stdout
  #     KONG_PROXY_ERROR_LOG: /dev/stderr
  #     KONG_ADMIN_ERROR_LOG: /dev/stderr
  #     KONG_ADMIN_LISTEN: 0.0.0.0:8001
  #     KONG_LOG_LEVEL: debug
  #   depends_on:
  #     - kong-migrations
  #     - kong-database
  #   volumes:
  #     - ./plugins/hello-plugin/configs/config.json:/kong/configs/config.json

  # konga:
  #   image: pantsel/konga:latest
  #   platform: linux/amd64
  #   networks:
  #     - kong-net
  #   ports:
  #     - "1337:1337"
  #   environment:
  #     NODE_ENV: production
  #   depends_on:
  #     - kong


#################################################
#               Service-User                    #
#################################################
  service-user:
    image: service-user
    container_name: service-user
    build:
      context: ./backend-services/service_user
      dockerfile: Dockerfile
    depends_on:
      - redis
      - postgres
    ports:
      - "8082:8082"
    env_file:
      - ./backend-services/service_user/.env
    networks:
      - default

#################################################
#              Service-Wallet                   #
#################################################
  service-wallet:
    image: service-wallet
    container_name: service-wallet
    build:
      context: ./backend-services/service_wallet
      dockerfile: Dockerfile
    depends_on:
      - redis
      - postgres
    ports:
      - "8083:8083"
    env_file:
      - ./backend-services/service_wallet/.env
    networks:
      - default
  
#################################################
#                     Nginx                     #
#################################################
  nginx-gateway:
    image: nginx:stable
    container_name: nginx-gateway
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - service-user
      - service-wallet
    networks:
      - default


#################################################
#                 NETWORKS                      #
#################################################
networks:
  default:
    driver: bridge
  kong-net:
    driver: bridge

#################################################
#                 VOLUMES                       #
#################################################
volumes:
  es_data:
  app_pg_data:
  kong_pg_data:
  mongo_data:
